"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Grade = void 0;
class Grade {
    constructor(o) {
        this.name = o.devoir;
        this.value = betterValue(o);
        this.class = {
            max: !(isNaN(+o.maxClasse) || !o.maxClasse)
                ? +o.maxClasse
                : o.maxClasse || undefined,
            avg: !(isNaN(+o.moyenneClasse) || !o.moyenneClasse)
                ? +o.moyenneClasse
                : o.moyenneClasse || undefined,
            min: !(isNaN(+o.minClasse) || !o.minClasse)
                ? +o.minClasse
                : o.minClasse || undefined,
        };
        this.outOf = +o.noteSur.replace(/,/, ".");
        this.weight = +o.coef;
        this.unweighted = o.nonSignificatif;
        this.isLetter = o.enLettre;
        this.date = new Date(o.date);
        this.dateTyped = new Date(o.dateSaisie);
        this.periodCode = o.codePeriode;
        this.subject = {
            code: o.codeMatiere,
            name: o.libelleMatiere,
            subSubjectCode: o.codeMatiere || undefined,
        };
        this.elements = o.elementsProgramme.map(e => ({
            id: e.idElemProg,
            competenceId: e.idCompetence,
            name: e.libelleCompetence,
            description: e.descriptif,
            value: e.valeur,
        }));
        this.qcm = o.qcm
            ? {
                id: o.qcm.idQCM,
                name: o.qcm.titre,
                startsAt: new Date(o.qcm.debute),
            }
            : undefined;
        this._raw = o;
    }
}
exports.Grade = Grade;
function betterValue(note) {
    if (note.enLettre)
        return note.valeur;
    return +note.valeur.replace(/,/, ".");
}

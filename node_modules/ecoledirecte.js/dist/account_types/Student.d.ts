/// <reference types="node" />
import { Account } from "./Account";
import { Session } from "../Session";
import { studentAccount, assignement, message, grade, period, studTlElem } from "../types";
export declare class Student extends Account {
    private session;
    type: "student";
    private account;
    constructor(session: Session);
    /**
     * Fetches the homework
     * @param dates (Array of) variable(s) which can be converted into Date object(s)
     * @param onlyWithWork If true, will ignore all assignements objects that do not contain any homework
     */
    getHomework(params?: {
        dates?: Array<Date | string | number> | (Date | string | number);
        onlyWithWork?: boolean;
    }): Promise<assignement[]>;
    /**
     * @returns Every sent and received message, in ascending order by id
     */
    getMessages(): Promise<message[]>;
    /**
     * @returns Every grade
     */
    getGrades(): Promise<grade[]>;
    /**
     * @returns Every periods with their subjects. Useful to get more infos about grades.
     * It is recommended to cache them.
     */
    getPeriods(): Promise<period[]>;
    timeline(): Promise<studTlElem[]>;
    getPhoto(): Promise<Buffer | undefined>;
    get _raw(): studentAccount;
}
